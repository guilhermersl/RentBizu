// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentBizu.Data.Contexto;

#nullable disable

namespace RentBizu.Data.Migrations
{
    [DbContext(typeof(RentBizuContext))]
    [Migration("20220924013925_novo")]
    partial class novo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RentBizu.Domain.AluguelContext.Aluguel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocatarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlanoContaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocatarioId");

                    b.HasIndex("PlanoContaId");

                    b.ToTable("Aluguel", (string)null);
                });

            modelBuilder.Entity("RentBizu.Domain.LocadorContext.Locador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locador", (string)null);
                });

            modelBuilder.Entity("RentBizu.Domain.LocadorContext.PlanoConta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataOferta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FimPlano")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InicioPlano")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginPlanoContaPlano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaPlanoContaPlano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPlanoConta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LocadorId");

                    b.ToTable("PlanoConta", (string)null);
                });

            modelBuilder.Entity("RentBizu.Domain.LocatarioContext.Locatario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locatario", (string)null);
                });

            modelBuilder.Entity("RentBizu.Domain.AluguelContext.Aluguel", b =>
                {
                    b.HasOne("RentBizu.Domain.LocatarioContext.Locatario", null)
                        .WithMany("Alugueis")
                        .HasForeignKey("LocatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentBizu.Domain.LocadorContext.PlanoConta", null)
                        .WithMany("Alugueis")
                        .HasForeignKey("PlanoContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentBizu.Domain.LocadorContext.PlanoConta", b =>
                {
                    b.HasOne("RentBizu.Domain.LocadorContext.Locador", null)
                        .WithMany("PlanoContas")
                        .HasForeignKey("LocadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentBizu.Domain.LocadorContext.Locador", b =>
                {
                    b.Navigation("PlanoContas");
                });

            modelBuilder.Entity("RentBizu.Domain.LocadorContext.PlanoConta", b =>
                {
                    b.Navigation("Alugueis");
                });

            modelBuilder.Entity("RentBizu.Domain.LocatarioContext.Locatario", b =>
                {
                    b.Navigation("Alugueis");
                });
#pragma warning restore 612, 618
        }
    }
}
